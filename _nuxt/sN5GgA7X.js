import{_ as h}from"./cTGMJFXf.js";import{_ as y}from"./BWtgfiIT.js";import{b,d as k}from"./tRb40OuR.js";import{h as x,g as B,r as o,i as C,c as n,b as _,a as r,F as L,j as w,o as l}from"./B5I_lrM_.js";import{u as E}from"./PPgRZCpY.js";import"./CsCLsNfs.js";import"./BQJ3mUbP.js";import"./BnSAYxrr.js";import"./BQkc-AXV.js";import"./DvDH6DOc.js";import"./Cm5kZlTA.js";const F={class:"container"},N=["innerHTML"],T={class:"articles"},G={__name:"[...tag]",async setup(j){let t,c;const d=b(x().public.minpress),i=B().params.tag[0],e=o([]),m=d.searchUrl+"?tag="+i;console.log(m);const{data:a}=([t,c]=C(()=>E(m,"$fhlUj39IgL")),t=await t,c(),t);if(a.value.totalElements>0){const s=o([]);s.value=a.value.content.map(p=>k(p)),e.value=s.value}else e.value=[];const f=o('find <span style="color:red">'+a.value.totalElements+'</span> markdown files contains tag: <span style="color:red">'+i+"</span>.");return(s,p)=>{const g=h,v=y;return l(),n("div",null,[_(g),r("main",F,[r("label",{style:{"margin-bottom":"1rem"},innerHTML:f.value},null,8,N),r("div",T,[(l(!0),n(L,null,w(e.value,u=>(l(),n("div",{class:"article",key:u.id},[_(v,{item:u},null,8,["item"])]))),128))])])])}}};export{G as default};
