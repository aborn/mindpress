import{_ as h}from"./DMGU4WNi.js";import{_ as y}from"./DSQjBMvt.js";import{b,d as x}from"./tRb40OuR.js";import{H as k,G as B,x as o,I as C,c as n,b as _,a as r,F as L,D as w,o as l}from"./0VmqX8Pe.js";import{u as E}from"./Da_yB0kA.js";import"./DBljpKhT.js";import"./DgydWD8w.js";import"./DIYvxlDG.js";import"./BQkc-AXV.js";import"./DvDH6DOc.js";import"./CKcVQbgC.js";const F={class:"container"},H=["innerHTML"],N={class:"articles"},z={__name:"[...tag]",async setup(T){let t,c;const d=b(k().public.minpress),i=B().params.tag[0],e=o([]),m=d.searchUrl+"?tag="+i;console.log(m);const{data:a}=([t,c]=C(()=>E(m,"$fhlUj39IgL")),t=await t,c(),t);if(a.value.totalElements>0){const s=o([]);s.value=a.value.content.map(p=>x(p)),e.value=s.value}else e.value=[];const f=o('find <span style="color:red">'+a.value.totalElements+'</span> markdown files contains tag: <span style="color:red">'+i+"</span>.");return(s,p)=>{const g=h,v=y;return l(),n("div",null,[_(g),r("main",F,[r("label",{style:{"margin-bottom":"1rem"},innerHTML:f.value},null,8,H),r("div",N,[(l(!0),n(L,null,w(e.value,u=>(l(),n("div",{class:"article",key:u.id},[_(v,{item:u},null,8,["item"])]))),128))])])])}}};export{z as default};
